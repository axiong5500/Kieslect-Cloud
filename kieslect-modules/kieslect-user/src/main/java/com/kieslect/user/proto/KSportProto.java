// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KSport.proto
// Protobuf Java Version: 4.26.1

package com.kieslect.user.proto;

public final class KSportProto {
  private KSportProto() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 26,
      /* patch= */ 1,
      /* suffix= */ "",
      KSportProto.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface KSportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:KSport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 user_id = 1;</code>
     * @return The userId.
     */
    long getUserId();

    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    java.util.List<DetailSport>
        getDetailSportList();
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    DetailSport getDetailSport(int index);
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    int getDetailSportCount();
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    java.util.List<? extends DetailSportOrBuilder>
        getDetailSportOrBuilderList();
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    DetailSportOrBuilder getDetailSportOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code KSport}
   */
  public static final class KSport extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:KSport)
      KSportOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        KSport.class.getName());
    }
    // Use KSport.newBuilder() to construct.
    private KSport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private KSport() {
      detailSport_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KSportProto.internal_static_KSport_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KSportProto.internal_static_KSport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              KSport.class, Builder.class);
    }

    public static final int USER_ID_FIELD_NUMBER = 1;
    private long userId_ = 0L;
    /**
     * <code>int64 user_id = 1;</code>
     * @return The userId.
     */
    @Override
    public long getUserId() {
      return userId_;
    }

    public static final int DETAIL_SPORT_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<DetailSport> detailSport_;
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    @Override
    public java.util.List<DetailSport> getDetailSportList() {
      return detailSport_;
    }
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    @Override
    public java.util.List<? extends DetailSportOrBuilder>
        getDetailSportOrBuilderList() {
      return detailSport_;
    }
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    @Override
    public int getDetailSportCount() {
      return detailSport_.size();
    }
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    @Override
    public DetailSport getDetailSport(int index) {
      return detailSport_.get(index);
    }
    /**
     * <code>repeated .DetailSport detail_sport = 2;</code>
     */
    @Override
    public DetailSportOrBuilder getDetailSportOrBuilder(
        int index) {
      return detailSport_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (userId_ != 0L) {
        output.writeInt64(1, userId_);
      }
      for (int i = 0; i < detailSport_.size(); i++) {
        output.writeMessage(2, detailSport_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (userId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, userId_);
      }
      for (int i = 0; i < detailSport_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, detailSport_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof KSport)) {
        return super.equals(obj);
      }
      KSport other = (KSport) obj;

      if (getUserId()
          != other.getUserId()) return false;
      if (!getDetailSportList()
          .equals(other.getDetailSportList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + USER_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUserId());
      if (getDetailSportCount() > 0) {
        hash = (37 * hash) + DETAIL_SPORT_FIELD_NUMBER;
        hash = (53 * hash) + getDetailSportList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static KSport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KSport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KSport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KSport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KSport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static KSport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static KSport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static KSport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static KSport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static KSport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static KSport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static KSport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(KSport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code KSport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:KSport)
        KSportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KSportProto.internal_static_KSport_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KSportProto.internal_static_KSport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                KSport.class, Builder.class);
      }

      // Construct using com.kieslect.user.proto.KSportProto.KSport.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        userId_ = 0L;
        if (detailSportBuilder_ == null) {
          detailSport_ = java.util.Collections.emptyList();
        } else {
          detailSport_ = null;
          detailSportBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KSportProto.internal_static_KSport_descriptor;
      }

      @Override
      public KSport getDefaultInstanceForType() {
        return KSport.getDefaultInstance();
      }

      @Override
      public KSport build() {
        KSport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public KSport buildPartial() {
        KSport result = new KSport(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(KSport result) {
        if (detailSportBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            detailSport_ = java.util.Collections.unmodifiableList(detailSport_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.detailSport_ = detailSport_;
        } else {
          result.detailSport_ = detailSportBuilder_.build();
        }
      }

      private void buildPartial0(KSport result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.userId_ = userId_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof KSport) {
          return mergeFrom((KSport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(KSport other) {
        if (other == KSport.getDefaultInstance()) return this;
        if (other.getUserId() != 0L) {
          setUserId(other.getUserId());
        }
        if (detailSportBuilder_ == null) {
          if (!other.detailSport_.isEmpty()) {
            if (detailSport_.isEmpty()) {
              detailSport_ = other.detailSport_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDetailSportIsMutable();
              detailSport_.addAll(other.detailSport_);
            }
            onChanged();
          }
        } else {
          if (!other.detailSport_.isEmpty()) {
            if (detailSportBuilder_.isEmpty()) {
              detailSportBuilder_.dispose();
              detailSportBuilder_ = null;
              detailSport_ = other.detailSport_;
              bitField0_ = (bitField0_ & ~0x00000002);
              detailSportBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDetailSportFieldBuilder() : null;
            } else {
              detailSportBuilder_.addAllMessages(other.detailSport_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                userId_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                DetailSport m =
                    input.readMessage(
                        DetailSport.parser(),
                        extensionRegistry);
                if (detailSportBuilder_ == null) {
                  ensureDetailSportIsMutable();
                  detailSport_.add(m);
                } else {
                  detailSportBuilder_.addMessage(m);
                }
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long userId_ ;
      /**
       * <code>int64 user_id = 1;</code>
       * @return The userId.
       */
      @Override
      public long getUserId() {
        return userId_;
      }
      /**
       * <code>int64 user_id = 1;</code>
       * @param value The userId to set.
       * @return This builder for chaining.
       */
      public Builder setUserId(long value) {

        userId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 user_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<DetailSport> detailSport_ =
        java.util.Collections.emptyList();
      private void ensureDetailSportIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          detailSport_ = new java.util.ArrayList<DetailSport>(detailSport_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DetailSport, DetailSport.Builder, DetailSportOrBuilder> detailSportBuilder_;

      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public java.util.List<DetailSport> getDetailSportList() {
        if (detailSportBuilder_ == null) {
          return java.util.Collections.unmodifiableList(detailSport_);
        } else {
          return detailSportBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public int getDetailSportCount() {
        if (detailSportBuilder_ == null) {
          return detailSport_.size();
        } else {
          return detailSportBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public DetailSport getDetailSport(int index) {
        if (detailSportBuilder_ == null) {
          return detailSport_.get(index);
        } else {
          return detailSportBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder setDetailSport(
          int index, DetailSport value) {
        if (detailSportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailSportIsMutable();
          detailSport_.set(index, value);
          onChanged();
        } else {
          detailSportBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder setDetailSport(
          int index, DetailSport.Builder builderForValue) {
        if (detailSportBuilder_ == null) {
          ensureDetailSportIsMutable();
          detailSport_.set(index, builderForValue.build());
          onChanged();
        } else {
          detailSportBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder addDetailSport(DetailSport value) {
        if (detailSportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailSportIsMutable();
          detailSport_.add(value);
          onChanged();
        } else {
          detailSportBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder addDetailSport(
          int index, DetailSport value) {
        if (detailSportBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDetailSportIsMutable();
          detailSport_.add(index, value);
          onChanged();
        } else {
          detailSportBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder addDetailSport(
          DetailSport.Builder builderForValue) {
        if (detailSportBuilder_ == null) {
          ensureDetailSportIsMutable();
          detailSport_.add(builderForValue.build());
          onChanged();
        } else {
          detailSportBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder addDetailSport(
          int index, DetailSport.Builder builderForValue) {
        if (detailSportBuilder_ == null) {
          ensureDetailSportIsMutable();
          detailSport_.add(index, builderForValue.build());
          onChanged();
        } else {
          detailSportBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder addAllDetailSport(
          Iterable<? extends DetailSport> values) {
        if (detailSportBuilder_ == null) {
          ensureDetailSportIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, detailSport_);
          onChanged();
        } else {
          detailSportBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder clearDetailSport() {
        if (detailSportBuilder_ == null) {
          detailSport_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          detailSportBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public Builder removeDetailSport(int index) {
        if (detailSportBuilder_ == null) {
          ensureDetailSportIsMutable();
          detailSport_.remove(index);
          onChanged();
        } else {
          detailSportBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public DetailSport.Builder getDetailSportBuilder(
          int index) {
        return getDetailSportFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public DetailSportOrBuilder getDetailSportOrBuilder(
          int index) {
        if (detailSportBuilder_ == null) {
          return detailSport_.get(index);  } else {
          return detailSportBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public java.util.List<? extends DetailSportOrBuilder>
           getDetailSportOrBuilderList() {
        if (detailSportBuilder_ != null) {
          return detailSportBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(detailSport_);
        }
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public DetailSport.Builder addDetailSportBuilder() {
        return getDetailSportFieldBuilder().addBuilder(
            DetailSport.getDefaultInstance());
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public DetailSport.Builder addDetailSportBuilder(
          int index) {
        return getDetailSportFieldBuilder().addBuilder(
            index, DetailSport.getDefaultInstance());
      }
      /**
       * <code>repeated .DetailSport detail_sport = 2;</code>
       */
      public java.util.List<DetailSport.Builder>
           getDetailSportBuilderList() {
        return getDetailSportFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DetailSport, DetailSport.Builder, DetailSportOrBuilder>
          getDetailSportFieldBuilder() {
        if (detailSportBuilder_ == null) {
          detailSportBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DetailSport, DetailSport.Builder, DetailSportOrBuilder>(
                  detailSport_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          detailSport_ = null;
        }
        return detailSportBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:KSport)
    }

    // @@protoc_insertion_point(class_scope:KSport)
    private static final KSport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new KSport();
    }

    public static KSport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<KSport>
        PARSER = new com.google.protobuf.AbstractParser<KSport>() {
      @Override
      public KSport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<KSport> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<KSport> getParserForType() {
      return PARSER;
    }

    @Override
    public KSport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DetailSportOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DetailSport)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 only = 1;</code>
     * @return The only.
     */
    long getOnly();

    /**
     * <pre>
     * 运动类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     * @return The type.
     */
    int getType();

    /**
     * <pre>
     * 开始时间 秒
     * </pre>
     *
     * <code>int64 start_time = 3;</code>
     * @return The startTime.
     */
    long getStartTime();

    /**
     * <pre>
     * 结束时间 秒
     * </pre>
     *
     * <code>int64 end_time = 4;</code>
     * @return The endTime.
     */
    long getEndTime();

    /**
     * <pre>
     * 运动时间 秒
     * </pre>
     *
     * <code>int32 time = 5;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <pre>
     * 总计步数
     * </pre>
     *
     * <code>int32 steps = 6;</code>
     * @return The steps.
     */
    int getSteps();

    /**
     * <pre>
     * 总路程-米
     * </pre>
     *
     * <code>float distance = 7;</code>
     * @return The distance.
     */
    float getDistance();

    /**
     * <pre>
     * 最大速度-米/秒
     * </pre>
     *
     * <code>float max_speed = 8;</code>
     * @return The maxSpeed.
     */
    float getMaxSpeed();

    /**
     * <code>float avg_hr = 9;</code>
     * @return The avgHr.
     */
    float getAvgHr();

    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    java.util.List<DetailSportData>
        getSportDataList();
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    DetailSportData getSportData(int index);
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    int getSportDataCount();
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    java.util.List<? extends DetailSportDataOrBuilder>
        getSportDataOrBuilderList();
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    DetailSportDataOrBuilder getSportDataOrBuilder(
        int index);

    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    java.util.List<DetailDevice>
        getSportDeviceList();
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    DetailDevice getSportDevice(int index);
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    int getSportDeviceCount();
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    java.util.List<? extends DetailDeviceOrBuilder>
        getSportDeviceOrBuilderList();
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    DetailDeviceOrBuilder getSportDeviceOrBuilder(
        int index);

    /**
     * <pre>
     * 哪个端发起的运动，0-手机，1-手表
     * </pre>
     *
     * <code>int32 device_type = 12;</code>
     * @return The deviceType.
     */
    int getDeviceType();

    /**
     * <pre>
     * 距离目标
     * </pre>
     *
     * <code>float distance_aim = 13;</code>
     * @return The distanceAim.
     */
    float getDistanceAim();

    /**
     * <pre>
     * 热量目标
     * </pre>
     *
     * <code>float calories_aim = 14;</code>
     * @return The caloriesAim.
     */
    float getCaloriesAim();
  }
  /**
   * Protobuf type {@code DetailSport}
   */
  public static final class DetailSport extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DetailSport)
      DetailSportOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        DetailSport.class.getName());
    }
    // Use DetailSport.newBuilder() to construct.
    private DetailSport(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DetailSport() {
      sportData_ = java.util.Collections.emptyList();
      sportDevice_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KSportProto.internal_static_DetailSport_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KSportProto.internal_static_DetailSport_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DetailSport.class, Builder.class);
    }

    public static final int ONLY_FIELD_NUMBER = 1;
    private long only_ = 0L;
    /**
     * <code>int64 only = 1;</code>
     * @return The only.
     */
    @Override
    public long getOnly() {
      return only_;
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_ = 0;
    /**
     * <pre>
     * 运动类型
     * </pre>
     *
     * <code>int32 type = 2;</code>
     * @return The type.
     */
    @Override
    public int getType() {
      return type_;
    }

    public static final int START_TIME_FIELD_NUMBER = 3;
    private long startTime_ = 0L;
    /**
     * <pre>
     * 开始时间 秒
     * </pre>
     *
     * <code>int64 start_time = 3;</code>
     * @return The startTime.
     */
    @Override
    public long getStartTime() {
      return startTime_;
    }

    public static final int END_TIME_FIELD_NUMBER = 4;
    private long endTime_ = 0L;
    /**
     * <pre>
     * 结束时间 秒
     * </pre>
     *
     * <code>int64 end_time = 4;</code>
     * @return The endTime.
     */
    @Override
    public long getEndTime() {
      return endTime_;
    }

    public static final int TIME_FIELD_NUMBER = 5;
    private int time_ = 0;
    /**
     * <pre>
     * 运动时间 秒
     * </pre>
     *
     * <code>int32 time = 5;</code>
     * @return The time.
     */
    @Override
    public int getTime() {
      return time_;
    }

    public static final int STEPS_FIELD_NUMBER = 6;
    private int steps_ = 0;
    /**
     * <pre>
     * 总计步数
     * </pre>
     *
     * <code>int32 steps = 6;</code>
     * @return The steps.
     */
    @Override
    public int getSteps() {
      return steps_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 7;
    private float distance_ = 0F;
    /**
     * <pre>
     * 总路程-米
     * </pre>
     *
     * <code>float distance = 7;</code>
     * @return The distance.
     */
    @Override
    public float getDistance() {
      return distance_;
    }

    public static final int MAX_SPEED_FIELD_NUMBER = 8;
    private float maxSpeed_ = 0F;
    /**
     * <pre>
     * 最大速度-米/秒
     * </pre>
     *
     * <code>float max_speed = 8;</code>
     * @return The maxSpeed.
     */
    @Override
    public float getMaxSpeed() {
      return maxSpeed_;
    }

    public static final int AVG_HR_FIELD_NUMBER = 9;
    private float avgHr_ = 0F;
    /**
     * <code>float avg_hr = 9;</code>
     * @return The avgHr.
     */
    @Override
    public float getAvgHr() {
      return avgHr_;
    }

    public static final int SPORT_DATA_FIELD_NUMBER = 10;
    @SuppressWarnings("serial")
    private java.util.List<DetailSportData> sportData_;
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    @Override
    public java.util.List<DetailSportData> getSportDataList() {
      return sportData_;
    }
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    @Override
    public java.util.List<? extends DetailSportDataOrBuilder>
        getSportDataOrBuilderList() {
      return sportData_;
    }
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    @Override
    public int getSportDataCount() {
      return sportData_.size();
    }
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    @Override
    public DetailSportData getSportData(int index) {
      return sportData_.get(index);
    }
    /**
     * <code>repeated .DetailSportData sport_data = 10;</code>
     */
    @Override
    public DetailSportDataOrBuilder getSportDataOrBuilder(
        int index) {
      return sportData_.get(index);
    }

    public static final int SPORT_DEVICE_FIELD_NUMBER = 11;
    @SuppressWarnings("serial")
    private java.util.List<DetailDevice> sportDevice_;
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    @Override
    public java.util.List<DetailDevice> getSportDeviceList() {
      return sportDevice_;
    }
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    @Override
    public java.util.List<? extends DetailDeviceOrBuilder>
        getSportDeviceOrBuilderList() {
      return sportDevice_;
    }
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    @Override
    public int getSportDeviceCount() {
      return sportDevice_.size();
    }
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    @Override
    public DetailDevice getSportDevice(int index) {
      return sportDevice_.get(index);
    }
    /**
     * <code>repeated .DetailDevice sport_device = 11;</code>
     */
    @Override
    public DetailDeviceOrBuilder getSportDeviceOrBuilder(
        int index) {
      return sportDevice_.get(index);
    }

    public static final int DEVICE_TYPE_FIELD_NUMBER = 12;
    private int deviceType_ = 0;
    /**
     * <pre>
     * 哪个端发起的运动，0-手机，1-手表
     * </pre>
     *
     * <code>int32 device_type = 12;</code>
     * @return The deviceType.
     */
    @Override
    public int getDeviceType() {
      return deviceType_;
    }

    public static final int DISTANCE_AIM_FIELD_NUMBER = 13;
    private float distanceAim_ = 0F;
    /**
     * <pre>
     * 距离目标
     * </pre>
     *
     * <code>float distance_aim = 13;</code>
     * @return The distanceAim.
     */
    @Override
    public float getDistanceAim() {
      return distanceAim_;
    }

    public static final int CALORIES_AIM_FIELD_NUMBER = 14;
    private float caloriesAim_ = 0F;
    /**
     * <pre>
     * 热量目标
     * </pre>
     *
     * <code>float calories_aim = 14;</code>
     * @return The caloriesAim.
     */
    @Override
    public float getCaloriesAim() {
      return caloriesAim_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (only_ != 0L) {
        output.writeInt64(1, only_);
      }
      if (type_ != 0) {
        output.writeInt32(2, type_);
      }
      if (startTime_ != 0L) {
        output.writeInt64(3, startTime_);
      }
      if (endTime_ != 0L) {
        output.writeInt64(4, endTime_);
      }
      if (time_ != 0) {
        output.writeInt32(5, time_);
      }
      if (steps_ != 0) {
        output.writeInt32(6, steps_);
      }
      if (Float.floatToRawIntBits(distance_) != 0) {
        output.writeFloat(7, distance_);
      }
      if (Float.floatToRawIntBits(maxSpeed_) != 0) {
        output.writeFloat(8, maxSpeed_);
      }
      if (Float.floatToRawIntBits(avgHr_) != 0) {
        output.writeFloat(9, avgHr_);
      }
      for (int i = 0; i < sportData_.size(); i++) {
        output.writeMessage(10, sportData_.get(i));
      }
      for (int i = 0; i < sportDevice_.size(); i++) {
        output.writeMessage(11, sportDevice_.get(i));
      }
      if (deviceType_ != 0) {
        output.writeInt32(12, deviceType_);
      }
      if (Float.floatToRawIntBits(distanceAim_) != 0) {
        output.writeFloat(13, distanceAim_);
      }
      if (Float.floatToRawIntBits(caloriesAim_) != 0) {
        output.writeFloat(14, caloriesAim_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (only_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, only_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, type_);
      }
      if (startTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, startTime_);
      }
      if (endTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, endTime_);
      }
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, time_);
      }
      if (steps_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, steps_);
      }
      if (Float.floatToRawIntBits(distance_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, distance_);
      }
      if (Float.floatToRawIntBits(maxSpeed_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, maxSpeed_);
      }
      if (Float.floatToRawIntBits(avgHr_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, avgHr_);
      }
      for (int i = 0; i < sportData_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, sportData_.get(i));
      }
      for (int i = 0; i < sportDevice_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, sportDevice_.get(i));
      }
      if (deviceType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, deviceType_);
      }
      if (Float.floatToRawIntBits(distanceAim_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(13, distanceAim_);
      }
      if (Float.floatToRawIntBits(caloriesAim_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(14, caloriesAim_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof DetailSport)) {
        return super.equals(obj);
      }
      DetailSport other = (DetailSport) obj;

      if (getOnly()
          != other.getOnly()) return false;
      if (getType()
          != other.getType()) return false;
      if (getStartTime()
          != other.getStartTime()) return false;
      if (getEndTime()
          != other.getEndTime()) return false;
      if (getTime()
          != other.getTime()) return false;
      if (getSteps()
          != other.getSteps()) return false;
      if (Float.floatToIntBits(getDistance())
          != Float.floatToIntBits(
              other.getDistance())) return false;
      if (Float.floatToIntBits(getMaxSpeed())
          != Float.floatToIntBits(
              other.getMaxSpeed())) return false;
      if (Float.floatToIntBits(getAvgHr())
          != Float.floatToIntBits(
              other.getAvgHr())) return false;
      if (!getSportDataList()
          .equals(other.getSportDataList())) return false;
      if (!getSportDeviceList()
          .equals(other.getSportDeviceList())) return false;
      if (getDeviceType()
          != other.getDeviceType()) return false;
      if (Float.floatToIntBits(getDistanceAim())
          != Float.floatToIntBits(
              other.getDistanceAim())) return false;
      if (Float.floatToIntBits(getCaloriesAim())
          != Float.floatToIntBits(
              other.getCaloriesAim())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ONLY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getOnly());
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getStartTime());
      hash = (37 * hash) + END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getEndTime());
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + STEPS_FIELD_NUMBER;
      hash = (53 * hash) + getSteps();
      hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDistance());
      hash = (37 * hash) + MAX_SPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getMaxSpeed());
      hash = (37 * hash) + AVG_HR_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getAvgHr());
      if (getSportDataCount() > 0) {
        hash = (37 * hash) + SPORT_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getSportDataList().hashCode();
      }
      if (getSportDeviceCount() > 0) {
        hash = (37 * hash) + SPORT_DEVICE_FIELD_NUMBER;
        hash = (53 * hash) + getSportDeviceList().hashCode();
      }
      hash = (37 * hash) + DEVICE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceType();
      hash = (37 * hash) + DISTANCE_AIM_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDistanceAim());
      hash = (37 * hash) + CALORIES_AIM_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getCaloriesAim());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DetailSport parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailSport parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailSport parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailSport parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailSport parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailSport parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailSport parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DetailSport parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static DetailSport parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static DetailSport parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static DetailSport parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DetailSport parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DetailSport prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DetailSport}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DetailSport)
        DetailSportOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KSportProto.internal_static_DetailSport_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KSportProto.internal_static_DetailSport_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DetailSport.class, Builder.class);
      }

      // Construct using com.kieslect.user.proto.KSportProto.DetailSport.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        only_ = 0L;
        type_ = 0;
        startTime_ = 0L;
        endTime_ = 0L;
        time_ = 0;
        steps_ = 0;
        distance_ = 0F;
        maxSpeed_ = 0F;
        avgHr_ = 0F;
        if (sportDataBuilder_ == null) {
          sportData_ = java.util.Collections.emptyList();
        } else {
          sportData_ = null;
          sportDataBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000200);
        if (sportDeviceBuilder_ == null) {
          sportDevice_ = java.util.Collections.emptyList();
        } else {
          sportDevice_ = null;
          sportDeviceBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000400);
        deviceType_ = 0;
        distanceAim_ = 0F;
        caloriesAim_ = 0F;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KSportProto.internal_static_DetailSport_descriptor;
      }

      @Override
      public DetailSport getDefaultInstanceForType() {
        return DetailSport.getDefaultInstance();
      }

      @Override
      public DetailSport build() {
        DetailSport result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public DetailSport buildPartial() {
        DetailSport result = new DetailSport(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(DetailSport result) {
        if (sportDataBuilder_ == null) {
          if (((bitField0_ & 0x00000200) != 0)) {
            sportData_ = java.util.Collections.unmodifiableList(sportData_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.sportData_ = sportData_;
        } else {
          result.sportData_ = sportDataBuilder_.build();
        }
        if (sportDeviceBuilder_ == null) {
          if (((bitField0_ & 0x00000400) != 0)) {
            sportDevice_ = java.util.Collections.unmodifiableList(sportDevice_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.sportDevice_ = sportDevice_;
        } else {
          result.sportDevice_ = sportDeviceBuilder_.build();
        }
      }

      private void buildPartial0(DetailSport result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.only_ = only_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.startTime_ = startTime_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.endTime_ = endTime_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.time_ = time_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.steps_ = steps_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.distance_ = distance_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.maxSpeed_ = maxSpeed_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.avgHr_ = avgHr_;
        }
        if (((from_bitField0_ & 0x00000800) != 0)) {
          result.deviceType_ = deviceType_;
        }
        if (((from_bitField0_ & 0x00001000) != 0)) {
          result.distanceAim_ = distanceAim_;
        }
        if (((from_bitField0_ & 0x00002000) != 0)) {
          result.caloriesAim_ = caloriesAim_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DetailSport) {
          return mergeFrom((DetailSport)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DetailSport other) {
        if (other == DetailSport.getDefaultInstance()) return this;
        if (other.getOnly() != 0L) {
          setOnly(other.getOnly());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getStartTime() != 0L) {
          setStartTime(other.getStartTime());
        }
        if (other.getEndTime() != 0L) {
          setEndTime(other.getEndTime());
        }
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getSteps() != 0) {
          setSteps(other.getSteps());
        }
        if (other.getDistance() != 0F) {
          setDistance(other.getDistance());
        }
        if (other.getMaxSpeed() != 0F) {
          setMaxSpeed(other.getMaxSpeed());
        }
        if (other.getAvgHr() != 0F) {
          setAvgHr(other.getAvgHr());
        }
        if (sportDataBuilder_ == null) {
          if (!other.sportData_.isEmpty()) {
            if (sportData_.isEmpty()) {
              sportData_ = other.sportData_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureSportDataIsMutable();
              sportData_.addAll(other.sportData_);
            }
            onChanged();
          }
        } else {
          if (!other.sportData_.isEmpty()) {
            if (sportDataBuilder_.isEmpty()) {
              sportDataBuilder_.dispose();
              sportDataBuilder_ = null;
              sportData_ = other.sportData_;
              bitField0_ = (bitField0_ & ~0x00000200);
              sportDataBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSportDataFieldBuilder() : null;
            } else {
              sportDataBuilder_.addAllMessages(other.sportData_);
            }
          }
        }
        if (sportDeviceBuilder_ == null) {
          if (!other.sportDevice_.isEmpty()) {
            if (sportDevice_.isEmpty()) {
              sportDevice_ = other.sportDevice_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureSportDeviceIsMutable();
              sportDevice_.addAll(other.sportDevice_);
            }
            onChanged();
          }
        } else {
          if (!other.sportDevice_.isEmpty()) {
            if (sportDeviceBuilder_.isEmpty()) {
              sportDeviceBuilder_.dispose();
              sportDeviceBuilder_ = null;
              sportDevice_ = other.sportDevice_;
              bitField0_ = (bitField0_ & ~0x00000400);
              sportDeviceBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSportDeviceFieldBuilder() : null;
            } else {
              sportDeviceBuilder_.addAllMessages(other.sportDevice_);
            }
          }
        }
        if (other.getDeviceType() != 0) {
          setDeviceType(other.getDeviceType());
        }
        if (other.getDistanceAim() != 0F) {
          setDistanceAim(other.getDistanceAim());
        }
        if (other.getCaloriesAim() != 0F) {
          setCaloriesAim(other.getCaloriesAim());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                only_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                type_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 24: {
                startTime_ = input.readInt64();
                bitField0_ |= 0x00000004;
                break;
              } // case 24
              case 32: {
                endTime_ = input.readInt64();
                bitField0_ |= 0x00000008;
                break;
              } // case 32
              case 40: {
                time_ = input.readInt32();
                bitField0_ |= 0x00000010;
                break;
              } // case 40
              case 48: {
                steps_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 61: {
                distance_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 69: {
                maxSpeed_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              case 77: {
                avgHr_ = input.readFloat();
                bitField0_ |= 0x00000100;
                break;
              } // case 77
              case 82: {
                DetailSportData m =
                    input.readMessage(
                        DetailSportData.parser(),
                        extensionRegistry);
                if (sportDataBuilder_ == null) {
                  ensureSportDataIsMutable();
                  sportData_.add(m);
                } else {
                  sportDataBuilder_.addMessage(m);
                }
                break;
              } // case 82
              case 90: {
                DetailDevice m =
                    input.readMessage(
                        DetailDevice.parser(),
                        extensionRegistry);
                if (sportDeviceBuilder_ == null) {
                  ensureSportDeviceIsMutable();
                  sportDevice_.add(m);
                } else {
                  sportDeviceBuilder_.addMessage(m);
                }
                break;
              } // case 90
              case 96: {
                deviceType_ = input.readInt32();
                bitField0_ |= 0x00000800;
                break;
              } // case 96
              case 109: {
                distanceAim_ = input.readFloat();
                bitField0_ |= 0x00001000;
                break;
              } // case 109
              case 117: {
                caloriesAim_ = input.readFloat();
                bitField0_ |= 0x00002000;
                break;
              } // case 117
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long only_ ;
      /**
       * <code>int64 only = 1;</code>
       * @return The only.
       */
      @Override
      public long getOnly() {
        return only_;
      }
      /**
       * <code>int64 only = 1;</code>
       * @param value The only to set.
       * @return This builder for chaining.
       */
      public Builder setOnly(long value) {

        only_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 only = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnly() {
        bitField0_ = (bitField0_ & ~0x00000001);
        only_ = 0L;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <pre>
       * 运动类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       * @return The type.
       */
      @Override
      public int getType() {
        return type_;
      }
      /**
       * <pre>
       * 运动类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {

        type_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 运动类型
       * </pre>
       *
       * <code>int32 type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        onChanged();
        return this;
      }

      private long startTime_ ;
      /**
       * <pre>
       * 开始时间 秒
       * </pre>
       *
       * <code>int64 start_time = 3;</code>
       * @return The startTime.
       */
      @Override
      public long getStartTime() {
        return startTime_;
      }
      /**
       * <pre>
       * 开始时间 秒
       * </pre>
       *
       * <code>int64 start_time = 3;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(long value) {

        startTime_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 开始时间 秒
       * </pre>
       *
       * <code>int64 start_time = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000004);
        startTime_ = 0L;
        onChanged();
        return this;
      }

      private long endTime_ ;
      /**
       * <pre>
       * 结束时间 秒
       * </pre>
       *
       * <code>int64 end_time = 4;</code>
       * @return The endTime.
       */
      @Override
      public long getEndTime() {
        return endTime_;
      }
      /**
       * <pre>
       * 结束时间 秒
       * </pre>
       *
       * <code>int64 end_time = 4;</code>
       * @param value The endTime to set.
       * @return This builder for chaining.
       */
      public Builder setEndTime(long value) {

        endTime_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 结束时间 秒
       * </pre>
       *
       * <code>int64 end_time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        endTime_ = 0L;
        onChanged();
        return this;
      }

      private int time_ ;
      /**
       * <pre>
       * 运动时间 秒
       * </pre>
       *
       * <code>int32 time = 5;</code>
       * @return The time.
       */
      @Override
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * 运动时间 秒
       * </pre>
       *
       * <code>int32 time = 5;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {

        time_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 运动时间 秒
       * </pre>
       *
       * <code>int32 time = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000010);
        time_ = 0;
        onChanged();
        return this;
      }

      private int steps_ ;
      /**
       * <pre>
       * 总计步数
       * </pre>
       *
       * <code>int32 steps = 6;</code>
       * @return The steps.
       */
      @Override
      public int getSteps() {
        return steps_;
      }
      /**
       * <pre>
       * 总计步数
       * </pre>
       *
       * <code>int32 steps = 6;</code>
       * @param value The steps to set.
       * @return This builder for chaining.
       */
      public Builder setSteps(int value) {

        steps_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 总计步数
       * </pre>
       *
       * <code>int32 steps = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteps() {
        bitField0_ = (bitField0_ & ~0x00000020);
        steps_ = 0;
        onChanged();
        return this;
      }

      private float distance_ ;
      /**
       * <pre>
       * 总路程-米
       * </pre>
       *
       * <code>float distance = 7;</code>
       * @return The distance.
       */
      @Override
      public float getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * 总路程-米
       * </pre>
       *
       * <code>float distance = 7;</code>
       * @param value The distance to set.
       * @return This builder for chaining.
       */
      public Builder setDistance(float value) {

        distance_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 总路程-米
       * </pre>
       *
       * <code>float distance = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000040);
        distance_ = 0F;
        onChanged();
        return this;
      }

      private float maxSpeed_ ;
      /**
       * <pre>
       * 最大速度-米/秒
       * </pre>
       *
       * <code>float max_speed = 8;</code>
       * @return The maxSpeed.
       */
      @Override
      public float getMaxSpeed() {
        return maxSpeed_;
      }
      /**
       * <pre>
       * 最大速度-米/秒
       * </pre>
       *
       * <code>float max_speed = 8;</code>
       * @param value The maxSpeed to set.
       * @return This builder for chaining.
       */
      public Builder setMaxSpeed(float value) {

        maxSpeed_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 最大速度-米/秒
       * </pre>
       *
       * <code>float max_speed = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearMaxSpeed() {
        bitField0_ = (bitField0_ & ~0x00000080);
        maxSpeed_ = 0F;
        onChanged();
        return this;
      }

      private float avgHr_ ;
      /**
       * <code>float avg_hr = 9;</code>
       * @return The avgHr.
       */
      @Override
      public float getAvgHr() {
        return avgHr_;
      }
      /**
       * <code>float avg_hr = 9;</code>
       * @param value The avgHr to set.
       * @return This builder for chaining.
       */
      public Builder setAvgHr(float value) {

        avgHr_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <code>float avg_hr = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvgHr() {
        bitField0_ = (bitField0_ & ~0x00000100);
        avgHr_ = 0F;
        onChanged();
        return this;
      }

      private java.util.List<DetailSportData> sportData_ =
        java.util.Collections.emptyList();
      private void ensureSportDataIsMutable() {
        if (!((bitField0_ & 0x00000200) != 0)) {
          sportData_ = new java.util.ArrayList<DetailSportData>(sportData_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DetailSportData, DetailSportData.Builder, DetailSportDataOrBuilder> sportDataBuilder_;

      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public java.util.List<DetailSportData> getSportDataList() {
        if (sportDataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sportData_);
        } else {
          return sportDataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public int getSportDataCount() {
        if (sportDataBuilder_ == null) {
          return sportData_.size();
        } else {
          return sportDataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public DetailSportData getSportData(int index) {
        if (sportDataBuilder_ == null) {
          return sportData_.get(index);
        } else {
          return sportDataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder setSportData(
          int index, DetailSportData value) {
        if (sportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSportDataIsMutable();
          sportData_.set(index, value);
          onChanged();
        } else {
          sportDataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder setSportData(
          int index, DetailSportData.Builder builderForValue) {
        if (sportDataBuilder_ == null) {
          ensureSportDataIsMutable();
          sportData_.set(index, builderForValue.build());
          onChanged();
        } else {
          sportDataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder addSportData(DetailSportData value) {
        if (sportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSportDataIsMutable();
          sportData_.add(value);
          onChanged();
        } else {
          sportDataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder addSportData(
          int index, DetailSportData value) {
        if (sportDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSportDataIsMutable();
          sportData_.add(index, value);
          onChanged();
        } else {
          sportDataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder addSportData(
          DetailSportData.Builder builderForValue) {
        if (sportDataBuilder_ == null) {
          ensureSportDataIsMutable();
          sportData_.add(builderForValue.build());
          onChanged();
        } else {
          sportDataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder addSportData(
          int index, DetailSportData.Builder builderForValue) {
        if (sportDataBuilder_ == null) {
          ensureSportDataIsMutable();
          sportData_.add(index, builderForValue.build());
          onChanged();
        } else {
          sportDataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder addAllSportData(
          Iterable<? extends DetailSportData> values) {
        if (sportDataBuilder_ == null) {
          ensureSportDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sportData_);
          onChanged();
        } else {
          sportDataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder clearSportData() {
        if (sportDataBuilder_ == null) {
          sportData_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          sportDataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public Builder removeSportData(int index) {
        if (sportDataBuilder_ == null) {
          ensureSportDataIsMutable();
          sportData_.remove(index);
          onChanged();
        } else {
          sportDataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public DetailSportData.Builder getSportDataBuilder(
          int index) {
        return getSportDataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public DetailSportDataOrBuilder getSportDataOrBuilder(
          int index) {
        if (sportDataBuilder_ == null) {
          return sportData_.get(index);  } else {
          return sportDataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public java.util.List<? extends DetailSportDataOrBuilder>
           getSportDataOrBuilderList() {
        if (sportDataBuilder_ != null) {
          return sportDataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sportData_);
        }
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public DetailSportData.Builder addSportDataBuilder() {
        return getSportDataFieldBuilder().addBuilder(
            DetailSportData.getDefaultInstance());
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public DetailSportData.Builder addSportDataBuilder(
          int index) {
        return getSportDataFieldBuilder().addBuilder(
            index, DetailSportData.getDefaultInstance());
      }
      /**
       * <code>repeated .DetailSportData sport_data = 10;</code>
       */
      public java.util.List<DetailSportData.Builder>
           getSportDataBuilderList() {
        return getSportDataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DetailSportData, DetailSportData.Builder, DetailSportDataOrBuilder>
          getSportDataFieldBuilder() {
        if (sportDataBuilder_ == null) {
          sportDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DetailSportData, DetailSportData.Builder, DetailSportDataOrBuilder>(
                  sportData_,
                  ((bitField0_ & 0x00000200) != 0),
                  getParentForChildren(),
                  isClean());
          sportData_ = null;
        }
        return sportDataBuilder_;
      }

      private java.util.List<DetailDevice> sportDevice_ =
        java.util.Collections.emptyList();
      private void ensureSportDeviceIsMutable() {
        if (!((bitField0_ & 0x00000400) != 0)) {
          sportDevice_ = new java.util.ArrayList<DetailDevice>(sportDevice_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          DetailDevice, DetailDevice.Builder, DetailDeviceOrBuilder> sportDeviceBuilder_;

      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public java.util.List<DetailDevice> getSportDeviceList() {
        if (sportDeviceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sportDevice_);
        } else {
          return sportDeviceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public int getSportDeviceCount() {
        if (sportDeviceBuilder_ == null) {
          return sportDevice_.size();
        } else {
          return sportDeviceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public DetailDevice getSportDevice(int index) {
        if (sportDeviceBuilder_ == null) {
          return sportDevice_.get(index);
        } else {
          return sportDeviceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder setSportDevice(
          int index, DetailDevice value) {
        if (sportDeviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSportDeviceIsMutable();
          sportDevice_.set(index, value);
          onChanged();
        } else {
          sportDeviceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder setSportDevice(
          int index, DetailDevice.Builder builderForValue) {
        if (sportDeviceBuilder_ == null) {
          ensureSportDeviceIsMutable();
          sportDevice_.set(index, builderForValue.build());
          onChanged();
        } else {
          sportDeviceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder addSportDevice(DetailDevice value) {
        if (sportDeviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSportDeviceIsMutable();
          sportDevice_.add(value);
          onChanged();
        } else {
          sportDeviceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder addSportDevice(
          int index, DetailDevice value) {
        if (sportDeviceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSportDeviceIsMutable();
          sportDevice_.add(index, value);
          onChanged();
        } else {
          sportDeviceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder addSportDevice(
          DetailDevice.Builder builderForValue) {
        if (sportDeviceBuilder_ == null) {
          ensureSportDeviceIsMutable();
          sportDevice_.add(builderForValue.build());
          onChanged();
        } else {
          sportDeviceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder addSportDevice(
          int index, DetailDevice.Builder builderForValue) {
        if (sportDeviceBuilder_ == null) {
          ensureSportDeviceIsMutable();
          sportDevice_.add(index, builderForValue.build());
          onChanged();
        } else {
          sportDeviceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder addAllSportDevice(
          Iterable<? extends DetailDevice> values) {
        if (sportDeviceBuilder_ == null) {
          ensureSportDeviceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sportDevice_);
          onChanged();
        } else {
          sportDeviceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder clearSportDevice() {
        if (sportDeviceBuilder_ == null) {
          sportDevice_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          sportDeviceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public Builder removeSportDevice(int index) {
        if (sportDeviceBuilder_ == null) {
          ensureSportDeviceIsMutable();
          sportDevice_.remove(index);
          onChanged();
        } else {
          sportDeviceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public DetailDevice.Builder getSportDeviceBuilder(
          int index) {
        return getSportDeviceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public DetailDeviceOrBuilder getSportDeviceOrBuilder(
          int index) {
        if (sportDeviceBuilder_ == null) {
          return sportDevice_.get(index);  } else {
          return sportDeviceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public java.util.List<? extends DetailDeviceOrBuilder>
           getSportDeviceOrBuilderList() {
        if (sportDeviceBuilder_ != null) {
          return sportDeviceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sportDevice_);
        }
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public DetailDevice.Builder addSportDeviceBuilder() {
        return getSportDeviceFieldBuilder().addBuilder(
            DetailDevice.getDefaultInstance());
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public DetailDevice.Builder addSportDeviceBuilder(
          int index) {
        return getSportDeviceFieldBuilder().addBuilder(
            index, DetailDevice.getDefaultInstance());
      }
      /**
       * <code>repeated .DetailDevice sport_device = 11;</code>
       */
      public java.util.List<DetailDevice.Builder>
           getSportDeviceBuilderList() {
        return getSportDeviceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          DetailDevice, DetailDevice.Builder, DetailDeviceOrBuilder>
          getSportDeviceFieldBuilder() {
        if (sportDeviceBuilder_ == null) {
          sportDeviceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              DetailDevice, DetailDevice.Builder, DetailDeviceOrBuilder>(
                  sportDevice_,
                  ((bitField0_ & 0x00000400) != 0),
                  getParentForChildren(),
                  isClean());
          sportDevice_ = null;
        }
        return sportDeviceBuilder_;
      }

      private int deviceType_ ;
      /**
       * <pre>
       * 哪个端发起的运动，0-手机，1-手表
       * </pre>
       *
       * <code>int32 device_type = 12;</code>
       * @return The deviceType.
       */
      @Override
      public int getDeviceType() {
        return deviceType_;
      }
      /**
       * <pre>
       * 哪个端发起的运动，0-手机，1-手表
       * </pre>
       *
       * <code>int32 device_type = 12;</code>
       * @param value The deviceType to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceType(int value) {

        deviceType_ = value;
        bitField0_ |= 0x00000800;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 哪个端发起的运动，0-手机，1-手表
       * </pre>
       *
       * <code>int32 device_type = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceType() {
        bitField0_ = (bitField0_ & ~0x00000800);
        deviceType_ = 0;
        onChanged();
        return this;
      }

      private float distanceAim_ ;
      /**
       * <pre>
       * 距离目标
       * </pre>
       *
       * <code>float distance_aim = 13;</code>
       * @return The distanceAim.
       */
      @Override
      public float getDistanceAim() {
        return distanceAim_;
      }
      /**
       * <pre>
       * 距离目标
       * </pre>
       *
       * <code>float distance_aim = 13;</code>
       * @param value The distanceAim to set.
       * @return This builder for chaining.
       */
      public Builder setDistanceAim(float value) {

        distanceAim_ = value;
        bitField0_ |= 0x00001000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 距离目标
       * </pre>
       *
       * <code>float distance_aim = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistanceAim() {
        bitField0_ = (bitField0_ & ~0x00001000);
        distanceAim_ = 0F;
        onChanged();
        return this;
      }

      private float caloriesAim_ ;
      /**
       * <pre>
       * 热量目标
       * </pre>
       *
       * <code>float calories_aim = 14;</code>
       * @return The caloriesAim.
       */
      @Override
      public float getCaloriesAim() {
        return caloriesAim_;
      }
      /**
       * <pre>
       * 热量目标
       * </pre>
       *
       * <code>float calories_aim = 14;</code>
       * @param value The caloriesAim to set.
       * @return This builder for chaining.
       */
      public Builder setCaloriesAim(float value) {

        caloriesAim_ = value;
        bitField0_ |= 0x00002000;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 热量目标
       * </pre>
       *
       * <code>float calories_aim = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearCaloriesAim() {
        bitField0_ = (bitField0_ & ~0x00002000);
        caloriesAim_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DetailSport)
    }

    // @@protoc_insertion_point(class_scope:DetailSport)
    private static final DetailSport DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DetailSport();
    }

    public static DetailSport getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DetailSport>
        PARSER = new com.google.protobuf.AbstractParser<DetailSport>() {
      @Override
      public DetailSport parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DetailSport> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<DetailSport> getParserForType() {
      return PARSER;
    }

    @Override
    public DetailSport getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DetailSportDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DetailSportData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 运动时间 秒
     * </pre>
     *
     * <code>int32 time = 1;</code>
     * @return The time.
     */
    int getTime();

    /**
     * <pre>
     * 总时间 秒
     * </pre>
     *
     * <code>int32 total_time = 2;</code>
     * @return The totalTime.
     */
    int getTotalTime();

    /**
     * <code>double latitude = 3;</code>
     * @return The latitude.
     */
    double getLatitude();

    /**
     * <code>double longitude = 4;</code>
     * @return The longitude.
     */
    double getLongitude();

    /**
     * <pre>
     * 米/秒
     * </pre>
     *
     * <code>float speed = 5;</code>
     * @return The speed.
     */
    float getSpeed();

    /**
     * <pre>
     * 步频 步数/分钟
     * </pre>
     *
     * <code>int32 cadence = 6;</code>
     * @return The cadence.
     */
    int getCadence();

    /**
     * <code>int32 hr = 7;</code>
     * @return The hr.
     */
    int getHr();

    /**
     * <pre>
     * 圈数
     * </pre>
     *
     * <code>int32 lap = 8;</code>
     * @return The lap.
     */
    int getLap();

    /**
     * <pre>
     * 总路程-米
     * </pre>
     *
     * <code>float distance = 9;</code>
     * @return The distance.
     */
    float getDistance();

    /**
     * <pre>
     * 步数
     * </pre>
     *
     * <code>int32 steps = 10;</code>
     * @return The steps.
     */
    int getSteps();
  }
  /**
   * Protobuf type {@code DetailSportData}
   */
  public static final class DetailSportData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DetailSportData)
      DetailSportDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        DetailSportData.class.getName());
    }
    // Use DetailSportData.newBuilder() to construct.
    private DetailSportData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DetailSportData() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KSportProto.internal_static_DetailSportData_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KSportProto.internal_static_DetailSportData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DetailSportData.class, Builder.class);
    }

    public static final int TIME_FIELD_NUMBER = 1;
    private int time_ = 0;
    /**
     * <pre>
     * 运动时间 秒
     * </pre>
     *
     * <code>int32 time = 1;</code>
     * @return The time.
     */
    @Override
    public int getTime() {
      return time_;
    }

    public static final int TOTAL_TIME_FIELD_NUMBER = 2;
    private int totalTime_ = 0;
    /**
     * <pre>
     * 总时间 秒
     * </pre>
     *
     * <code>int32 total_time = 2;</code>
     * @return The totalTime.
     */
    @Override
    public int getTotalTime() {
      return totalTime_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 3;
    private double latitude_ = 0D;
    /**
     * <code>double latitude = 3;</code>
     * @return The latitude.
     */
    @Override
    public double getLatitude() {
      return latitude_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 4;
    private double longitude_ = 0D;
    /**
     * <code>double longitude = 4;</code>
     * @return The longitude.
     */
    @Override
    public double getLongitude() {
      return longitude_;
    }

    public static final int SPEED_FIELD_NUMBER = 5;
    private float speed_ = 0F;
    /**
     * <pre>
     * 米/秒
     * </pre>
     *
     * <code>float speed = 5;</code>
     * @return The speed.
     */
    @Override
    public float getSpeed() {
      return speed_;
    }

    public static final int CADENCE_FIELD_NUMBER = 6;
    private int cadence_ = 0;
    /**
     * <pre>
     * 步频 步数/分钟
     * </pre>
     *
     * <code>int32 cadence = 6;</code>
     * @return The cadence.
     */
    @Override
    public int getCadence() {
      return cadence_;
    }

    public static final int HR_FIELD_NUMBER = 7;
    private int hr_ = 0;
    /**
     * <code>int32 hr = 7;</code>
     * @return The hr.
     */
    @Override
    public int getHr() {
      return hr_;
    }

    public static final int LAP_FIELD_NUMBER = 8;
    private int lap_ = 0;
    /**
     * <pre>
     * 圈数
     * </pre>
     *
     * <code>int32 lap = 8;</code>
     * @return The lap.
     */
    @Override
    public int getLap() {
      return lap_;
    }

    public static final int DISTANCE_FIELD_NUMBER = 9;
    private float distance_ = 0F;
    /**
     * <pre>
     * 总路程-米
     * </pre>
     *
     * <code>float distance = 9;</code>
     * @return The distance.
     */
    @Override
    public float getDistance() {
      return distance_;
    }

    public static final int STEPS_FIELD_NUMBER = 10;
    private int steps_ = 0;
    /**
     * <pre>
     * 步数
     * </pre>
     *
     * <code>int32 steps = 10;</code>
     * @return The steps.
     */
    @Override
    public int getSteps() {
      return steps_;
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (time_ != 0) {
        output.writeInt32(1, time_);
      }
      if (totalTime_ != 0) {
        output.writeInt32(2, totalTime_);
      }
      if (Double.doubleToRawLongBits(latitude_) != 0) {
        output.writeDouble(3, latitude_);
      }
      if (Double.doubleToRawLongBits(longitude_) != 0) {
        output.writeDouble(4, longitude_);
      }
      if (Float.floatToRawIntBits(speed_) != 0) {
        output.writeFloat(5, speed_);
      }
      if (cadence_ != 0) {
        output.writeInt32(6, cadence_);
      }
      if (hr_ != 0) {
        output.writeInt32(7, hr_);
      }
      if (lap_ != 0) {
        output.writeInt32(8, lap_);
      }
      if (Float.floatToRawIntBits(distance_) != 0) {
        output.writeFloat(9, distance_);
      }
      if (steps_ != 0) {
        output.writeInt32(10, steps_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (time_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, time_);
      }
      if (totalTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, totalTime_);
      }
      if (Double.doubleToRawLongBits(latitude_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(3, latitude_);
      }
      if (Double.doubleToRawLongBits(longitude_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, longitude_);
      }
      if (Float.floatToRawIntBits(speed_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, speed_);
      }
      if (cadence_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, cadence_);
      }
      if (hr_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, hr_);
      }
      if (lap_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lap_);
      }
      if (Float.floatToRawIntBits(distance_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(9, distance_);
      }
      if (steps_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, steps_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof DetailSportData)) {
        return super.equals(obj);
      }
      DetailSportData other = (DetailSportData) obj;

      if (getTime()
          != other.getTime()) return false;
      if (getTotalTime()
          != other.getTotalTime()) return false;
      if (Double.doubleToLongBits(getLatitude())
          != Double.doubleToLongBits(
              other.getLatitude())) return false;
      if (Double.doubleToLongBits(getLongitude())
          != Double.doubleToLongBits(
              other.getLongitude())) return false;
      if (Float.floatToIntBits(getSpeed())
          != Float.floatToIntBits(
              other.getSpeed())) return false;
      if (getCadence()
          != other.getCadence()) return false;
      if (getHr()
          != other.getHr()) return false;
      if (getLap()
          != other.getLap()) return false;
      if (Float.floatToIntBits(getDistance())
          != Float.floatToIntBits(
              other.getDistance())) return false;
      if (getSteps()
          != other.getSteps()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTime();
      hash = (37 * hash) + TOTAL_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getTotalTime();
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLatitude()));
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          Double.doubleToLongBits(getLongitude()));
      hash = (37 * hash) + SPEED_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getSpeed());
      hash = (37 * hash) + CADENCE_FIELD_NUMBER;
      hash = (53 * hash) + getCadence();
      hash = (37 * hash) + HR_FIELD_NUMBER;
      hash = (53 * hash) + getHr();
      hash = (37 * hash) + LAP_FIELD_NUMBER;
      hash = (53 * hash) + getLap();
      hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
      hash = (53 * hash) + Float.floatToIntBits(
          getDistance());
      hash = (37 * hash) + STEPS_FIELD_NUMBER;
      hash = (53 * hash) + getSteps();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DetailSportData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailSportData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailSportData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailSportData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailSportData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailSportData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailSportData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DetailSportData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static DetailSportData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static DetailSportData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static DetailSportData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DetailSportData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DetailSportData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DetailSportData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DetailSportData)
        DetailSportDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KSportProto.internal_static_DetailSportData_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KSportProto.internal_static_DetailSportData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DetailSportData.class, Builder.class);
      }

      // Construct using com.kieslect.user.proto.KSportProto.DetailSportData.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        time_ = 0;
        totalTime_ = 0;
        latitude_ = 0D;
        longitude_ = 0D;
        speed_ = 0F;
        cadence_ = 0;
        hr_ = 0;
        lap_ = 0;
        distance_ = 0F;
        steps_ = 0;
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KSportProto.internal_static_DetailSportData_descriptor;
      }

      @Override
      public DetailSportData getDefaultInstanceForType() {
        return DetailSportData.getDefaultInstance();
      }

      @Override
      public DetailSportData build() {
        DetailSportData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public DetailSportData buildPartial() {
        DetailSportData result = new DetailSportData(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(DetailSportData result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.time_ = time_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.totalTime_ = totalTime_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.latitude_ = latitude_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.longitude_ = longitude_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.speed_ = speed_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.cadence_ = cadence_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.hr_ = hr_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.lap_ = lap_;
        }
        if (((from_bitField0_ & 0x00000100) != 0)) {
          result.distance_ = distance_;
        }
        if (((from_bitField0_ & 0x00000200) != 0)) {
          result.steps_ = steps_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DetailSportData) {
          return mergeFrom((DetailSportData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DetailSportData other) {
        if (other == DetailSportData.getDefaultInstance()) return this;
        if (other.getTime() != 0) {
          setTime(other.getTime());
        }
        if (other.getTotalTime() != 0) {
          setTotalTime(other.getTotalTime());
        }
        if (other.getLatitude() != 0D) {
          setLatitude(other.getLatitude());
        }
        if (other.getLongitude() != 0D) {
          setLongitude(other.getLongitude());
        }
        if (other.getSpeed() != 0F) {
          setSpeed(other.getSpeed());
        }
        if (other.getCadence() != 0) {
          setCadence(other.getCadence());
        }
        if (other.getHr() != 0) {
          setHr(other.getHr());
        }
        if (other.getLap() != 0) {
          setLap(other.getLap());
        }
        if (other.getDistance() != 0F) {
          setDistance(other.getDistance());
        }
        if (other.getSteps() != 0) {
          setSteps(other.getSteps());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                time_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                totalTime_ = input.readInt32();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 25: {
                latitude_ = input.readDouble();
                bitField0_ |= 0x00000004;
                break;
              } // case 25
              case 33: {
                longitude_ = input.readDouble();
                bitField0_ |= 0x00000008;
                break;
              } // case 33
              case 45: {
                speed_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 48: {
                cadence_ = input.readInt32();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              case 56: {
                hr_ = input.readInt32();
                bitField0_ |= 0x00000040;
                break;
              } // case 56
              case 64: {
                lap_ = input.readInt32();
                bitField0_ |= 0x00000080;
                break;
              } // case 64
              case 77: {
                distance_ = input.readFloat();
                bitField0_ |= 0x00000100;
                break;
              } // case 77
              case 80: {
                steps_ = input.readInt32();
                bitField0_ |= 0x00000200;
                break;
              } // case 80
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int time_ ;
      /**
       * <pre>
       * 运动时间 秒
       * </pre>
       *
       * <code>int32 time = 1;</code>
       * @return The time.
       */
      @Override
      public int getTime() {
        return time_;
      }
      /**
       * <pre>
       * 运动时间 秒
       * </pre>
       *
       * <code>int32 time = 1;</code>
       * @param value The time to set.
       * @return This builder for chaining.
       */
      public Builder setTime(int value) {

        time_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 运动时间 秒
       * </pre>
       *
       * <code>int32 time = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        time_ = 0;
        onChanged();
        return this;
      }

      private int totalTime_ ;
      /**
       * <pre>
       * 总时间 秒
       * </pre>
       *
       * <code>int32 total_time = 2;</code>
       * @return The totalTime.
       */
      @Override
      public int getTotalTime() {
        return totalTime_;
      }
      /**
       * <pre>
       * 总时间 秒
       * </pre>
       *
       * <code>int32 total_time = 2;</code>
       * @param value The totalTime to set.
       * @return This builder for chaining.
       */
      public Builder setTotalTime(int value) {

        totalTime_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 总时间 秒
       * </pre>
       *
       * <code>int32 total_time = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalTime_ = 0;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <code>double latitude = 3;</code>
       * @return The latitude.
       */
      @Override
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <code>double latitude = 3;</code>
       * @param value The latitude to set.
       * @return This builder for chaining.
       */
      public Builder setLatitude(double value) {

        latitude_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>double latitude = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000004);
        latitude_ = 0D;
        onChanged();
        return this;
      }

      private double longitude_ ;
      /**
       * <code>double longitude = 4;</code>
       * @return The longitude.
       */
      @Override
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <code>double longitude = 4;</code>
       * @param value The longitude to set.
       * @return This builder for chaining.
       */
      public Builder setLongitude(double value) {

        longitude_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>double longitude = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000008);
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private float speed_ ;
      /**
       * <pre>
       * 米/秒
       * </pre>
       *
       * <code>float speed = 5;</code>
       * @return The speed.
       */
      @Override
      public float getSpeed() {
        return speed_;
      }
      /**
       * <pre>
       * 米/秒
       * </pre>
       *
       * <code>float speed = 5;</code>
       * @param value The speed to set.
       * @return This builder for chaining.
       */
      public Builder setSpeed(float value) {

        speed_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 米/秒
       * </pre>
       *
       * <code>float speed = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpeed() {
        bitField0_ = (bitField0_ & ~0x00000010);
        speed_ = 0F;
        onChanged();
        return this;
      }

      private int cadence_ ;
      /**
       * <pre>
       * 步频 步数/分钟
       * </pre>
       *
       * <code>int32 cadence = 6;</code>
       * @return The cadence.
       */
      @Override
      public int getCadence() {
        return cadence_;
      }
      /**
       * <pre>
       * 步频 步数/分钟
       * </pre>
       *
       * <code>int32 cadence = 6;</code>
       * @param value The cadence to set.
       * @return This builder for chaining.
       */
      public Builder setCadence(int value) {

        cadence_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 步频 步数/分钟
       * </pre>
       *
       * <code>int32 cadence = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCadence() {
        bitField0_ = (bitField0_ & ~0x00000020);
        cadence_ = 0;
        onChanged();
        return this;
      }

      private int hr_ ;
      /**
       * <code>int32 hr = 7;</code>
       * @return The hr.
       */
      @Override
      public int getHr() {
        return hr_;
      }
      /**
       * <code>int32 hr = 7;</code>
       * @param value The hr to set.
       * @return This builder for chaining.
       */
      public Builder setHr(int value) {

        hr_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>int32 hr = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearHr() {
        bitField0_ = (bitField0_ & ~0x00000040);
        hr_ = 0;
        onChanged();
        return this;
      }

      private int lap_ ;
      /**
       * <pre>
       * 圈数
       * </pre>
       *
       * <code>int32 lap = 8;</code>
       * @return The lap.
       */
      @Override
      public int getLap() {
        return lap_;
      }
      /**
       * <pre>
       * 圈数
       * </pre>
       *
       * <code>int32 lap = 8;</code>
       * @param value The lap to set.
       * @return This builder for chaining.
       */
      public Builder setLap(int value) {

        lap_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 圈数
       * </pre>
       *
       * <code>int32 lap = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLap() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lap_ = 0;
        onChanged();
        return this;
      }

      private float distance_ ;
      /**
       * <pre>
       * 总路程-米
       * </pre>
       *
       * <code>float distance = 9;</code>
       * @return The distance.
       */
      @Override
      public float getDistance() {
        return distance_;
      }
      /**
       * <pre>
       * 总路程-米
       * </pre>
       *
       * <code>float distance = 9;</code>
       * @param value The distance to set.
       * @return This builder for chaining.
       */
      public Builder setDistance(float value) {

        distance_ = value;
        bitField0_ |= 0x00000100;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 总路程-米
       * </pre>
       *
       * <code>float distance = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearDistance() {
        bitField0_ = (bitField0_ & ~0x00000100);
        distance_ = 0F;
        onChanged();
        return this;
      }

      private int steps_ ;
      /**
       * <pre>
       * 步数
       * </pre>
       *
       * <code>int32 steps = 10;</code>
       * @return The steps.
       */
      @Override
      public int getSteps() {
        return steps_;
      }
      /**
       * <pre>
       * 步数
       * </pre>
       *
       * <code>int32 steps = 10;</code>
       * @param value The steps to set.
       * @return This builder for chaining.
       */
      public Builder setSteps(int value) {

        steps_ = value;
        bitField0_ |= 0x00000200;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 步数
       * </pre>
       *
       * <code>int32 steps = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearSteps() {
        bitField0_ = (bitField0_ & ~0x00000200);
        steps_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DetailSportData)
    }

    // @@protoc_insertion_point(class_scope:DetailSportData)
    private static final DetailSportData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DetailSportData();
    }

    public static DetailSportData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DetailSportData>
        PARSER = new com.google.protobuf.AbstractParser<DetailSportData>() {
      @Override
      public DetailSportData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DetailSportData> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<DetailSportData> getParserForType() {
      return PARSER;
    }

    @Override
    public DetailSportData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DetailDeviceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DetailDevice)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 0-手机，1-手表
     * </pre>
     *
     * <code>int32 device_type = 1;</code>
     * @return The deviceType.
     */
    int getDeviceType();

    /**
     * <code>string mac = 2;</code>
     * @return The mac.
     */
    String getMac();
    /**
     * <code>string mac = 2;</code>
     * @return The bytes for mac.
     */
    com.google.protobuf.ByteString
        getMacBytes();

    /**
     * <code>string name = 3;</code>
     * @return The name.
     */
    String getName();
    /**
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();
  }
  /**
   * Protobuf type {@code DetailDevice}
   */
  public static final class DetailDevice extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:DetailDevice)
      DetailDeviceOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 26,
        /* patch= */ 1,
        /* suffix= */ "",
        DetailDevice.class.getName());
    }
    // Use DetailDevice.newBuilder() to construct.
    private DetailDevice(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DetailDevice() {
      mac_ = "";
      name_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return KSportProto.internal_static_DetailDevice_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return KSportProto.internal_static_DetailDevice_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              DetailDevice.class, Builder.class);
    }

    public static final int DEVICE_TYPE_FIELD_NUMBER = 1;
    private int deviceType_ = 0;
    /**
     * <pre>
     * 0-手机，1-手表
     * </pre>
     *
     * <code>int32 device_type = 1;</code>
     * @return The deviceType.
     */
    @Override
    public int getDeviceType() {
      return deviceType_;
    }

    public static final int MAC_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile Object mac_ = "";
    /**
     * <code>string mac = 2;</code>
     * @return The mac.
     */
    @Override
    public String getMac() {
      Object ref = mac_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        mac_ = s;
        return s;
      }
    }
    /**
     * <code>string mac = 2;</code>
     * @return The bytes for mac.
     */
    @Override
    public com.google.protobuf.ByteString
        getMacBytes() {
      Object ref = mac_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        mac_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NAME_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile Object name_ = "";
    /**
     * <code>string name = 3;</code>
     * @return The name.
     */
    @Override
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 3;</code>
     * @return The bytes for name.
     */
    @Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (deviceType_ != 0) {
        output.writeInt32(1, deviceType_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(mac_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, mac_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, name_);
      }
      getUnknownFields().writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (deviceType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, deviceType_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(mac_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, mac_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, name_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof DetailDevice)) {
        return super.equals(obj);
      }
      DetailDevice other = (DetailDevice) obj;

      if (getDeviceType()
          != other.getDeviceType()) return false;
      if (!getMac()
          .equals(other.getMac())) return false;
      if (!getName()
          .equals(other.getName())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DEVICE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDeviceType();
      hash = (37 * hash) + MAC_FIELD_NUMBER;
      hash = (53 * hash) + getMac().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static DetailDevice parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailDevice parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailDevice parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailDevice parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailDevice parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static DetailDevice parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static DetailDevice parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DetailDevice parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static DetailDevice parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static DetailDevice parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static DetailDevice parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static DetailDevice parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(DetailDevice prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code DetailDevice}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DetailDevice)
        DetailDeviceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return KSportProto.internal_static_DetailDevice_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return KSportProto.internal_static_DetailDevice_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DetailDevice.class, Builder.class);
      }

      // Construct using com.kieslect.user.proto.KSportProto.DetailDevice.newBuilder()
      private Builder() {

      }

      private Builder(
          BuilderParent parent) {
        super(parent);

      }
      @Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        deviceType_ = 0;
        mac_ = "";
        name_ = "";
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return KSportProto.internal_static_DetailDevice_descriptor;
      }

      @Override
      public DetailDevice getDefaultInstanceForType() {
        return DetailDevice.getDefaultInstance();
      }

      @Override
      public DetailDevice build() {
        DetailDevice result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public DetailDevice buildPartial() {
        DetailDevice result = new DetailDevice(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(DetailDevice result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.deviceType_ = deviceType_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.mac_ = mac_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.name_ = name_;
        }
      }

      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DetailDevice) {
          return mergeFrom((DetailDevice)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(DetailDevice other) {
        if (other == DetailDevice.getDefaultInstance()) return this;
        if (other.getDeviceType() != 0) {
          setDeviceType(other.getDeviceType());
        }
        if (!other.getMac().isEmpty()) {
          mac_ = other.mac_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                deviceType_ = input.readInt32();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                mac_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                name_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int deviceType_ ;
      /**
       * <pre>
       * 0-手机，1-手表
       * </pre>
       *
       * <code>int32 device_type = 1;</code>
       * @return The deviceType.
       */
      @Override
      public int getDeviceType() {
        return deviceType_;
      }
      /**
       * <pre>
       * 0-手机，1-手表
       * </pre>
       *
       * <code>int32 device_type = 1;</code>
       * @param value The deviceType to set.
       * @return This builder for chaining.
       */
      public Builder setDeviceType(int value) {

        deviceType_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 0-手机，1-手表
       * </pre>
       *
       * <code>int32 device_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDeviceType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        deviceType_ = 0;
        onChanged();
        return this;
      }

      private Object mac_ = "";
      /**
       * <code>string mac = 2;</code>
       * @return The mac.
       */
      public String getMac() {
        Object ref = mac_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          mac_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string mac = 2;</code>
       * @return The bytes for mac.
       */
      public com.google.protobuf.ByteString
          getMacBytes() {
        Object ref = mac_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          mac_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string mac = 2;</code>
       * @param value The mac to set.
       * @return This builder for chaining.
       */
      public Builder setMac(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        mac_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string mac = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMac() {
        mac_ = getDefaultInstance().getMac();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string mac = 2;</code>
       * @param value The bytes for mac to set.
       * @return This builder for chaining.
       */
      public Builder setMacBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        mac_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private Object name_ = "";
      /**
       * <code>string name = 3;</code>
       * @return The name.
       */
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string name = 3;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 3;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          String value) {
        if (value == null) { throw new NullPointerException(); }
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        name_ = getDefaultInstance().getName();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>string name = 3;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        name_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:DetailDevice)
    }

    // @@protoc_insertion_point(class_scope:DetailDevice)
    private static final DetailDevice DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new DetailDevice();
    }

    public static DetailDevice getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DetailDevice>
        PARSER = new com.google.protobuf.AbstractParser<DetailDevice>() {
      @Override
      public DetailDevice parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DetailDevice> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<DetailDevice> getParserForType() {
      return PARSER;
    }

    @Override
    public DetailDevice getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_KSport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_KSport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DetailSport_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DetailSport_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DetailSportData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DetailSportData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DetailDevice_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DetailDevice_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014KSport.proto\"=\n\006KSport\022\017\n\007user_id\030\001 \001(" +
      "\003\022\"\n\014detail_sport\030\002 \003(\0132\014.DetailSport\"\255\002" +
      "\n\013DetailSport\022\014\n\004only\030\001 \001(\003\022\014\n\004type\030\002 \001(" +
      "\005\022\022\n\nstart_time\030\003 \001(\003\022\020\n\010end_time\030\004 \001(\003\022" +
      "\014\n\004time\030\005 \001(\005\022\r\n\005steps\030\006 \001(\005\022\020\n\010distance" +
      "\030\007 \001(\002\022\021\n\tmax_speed\030\010 \001(\002\022\016\n\006avg_hr\030\t \001(" +
      "\002\022$\n\nsport_data\030\n \003(\0132\020.DetailSportData\022" +
      "#\n\014sport_device\030\013 \003(\0132\r.DetailDevice\022\023\n\013" +
      "device_type\030\014 \001(\005\022\024\n\014distance_aim\030\r \001(\002\022" +
      "\024\n\014calories_aim\030\016 \001(\002\"\262\001\n\017DetailSportDat" +
      "a\022\014\n\004time\030\001 \001(\005\022\022\n\ntotal_time\030\002 \001(\005\022\020\n\010l" +
      "atitude\030\003 \001(\001\022\021\n\tlongitude\030\004 \001(\001\022\r\n\005spee" +
      "d\030\005 \001(\002\022\017\n\007cadence\030\006 \001(\005\022\n\n\002hr\030\007 \001(\005\022\013\n\003" +
      "lap\030\010 \001(\005\022\020\n\010distance\030\t \001(\002\022\r\n\005steps\030\n \001" +
      "(\005\">\n\014DetailDevice\022\023\n\013device_type\030\001 \001(\005\022" +
      "\013\n\003mac\030\002 \001(\t\022\014\n\004name\030\003 \001(\tB&\n\027com.kiesle" +
      "ct.user.protoB\013KSportProtob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_KSport_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_KSport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_KSport_descriptor,
        new String[] { "UserId", "DetailSport", });
    internal_static_DetailSport_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_DetailSport_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DetailSport_descriptor,
        new String[] { "Only", "Type", "StartTime", "EndTime", "Time", "Steps", "Distance", "MaxSpeed", "AvgHr", "SportData", "SportDevice", "DeviceType", "DistanceAim", "CaloriesAim", });
    internal_static_DetailSportData_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_DetailSportData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DetailSportData_descriptor,
        new String[] { "Time", "TotalTime", "Latitude", "Longitude", "Speed", "Cadence", "Hr", "Lap", "Distance", "Steps", });
    internal_static_DetailDevice_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_DetailDevice_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_DetailDevice_descriptor,
        new String[] { "DeviceType", "Mac", "Name", });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
